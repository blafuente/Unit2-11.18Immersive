
.ball{
    height: 100px;
    width: 100px;
    /* border: 2px solid black; */
    background-color: blue;
    color: white;
    /* trnasisiton will make the browser apply a transition 
    from one CSS rule to another over a period of time */
    /* you MUST be going from A ---> B to apply a transition */
    /* transition takes 2 args:
    1. which CSS rules to transition
    2. how long to get there */
    transition: all 1s;
    /* transform: rotateX(45deg); */
}
.ball:hover{
    border-radius: 50%;
    background-color: red;
    margin-left: 500px;
    display: inline-block;
    transform: rotate(360deg);
}
.ball.ease{
    transition: all 2s ease-in;
}
.ball-ease{
    transition: all 2s ease-out;
}
.ball.what-the{
    transition-timing-function: cubic-bezier(1,.03,0,-1.04)
}

.square{
    height: 200px;
    width: 200px;
    background-color: yellow;
    border: 5px solid black;
    margin-top: 5px;
    margin-bottom: 10px;
    /* transform property allows you to apply cool 
    transformations of any element that is otherwise
    just a rect */
    /* 1. rotate
    2. scale
    3. skew
    4. translate */
    transition: all 2s;
}

.square:hover{
    transform: rotate(0deg) !important;
}

.square.rotate{
    /* transform: rotate(45deg); */
    /* transform: rotateY(45deg); */
    transform: rotateZ(45deg);
}

.square.scale{
    /* scale takes in % how large or small to make an 
    element relative to it's base size */
    transform: scale(2);
    transform: scale(0.2);
    transform: scaleY(2);
}

.square.skew{
    transform: skew(45deg);
}

.square.translate{
    transform: translate(200px,100px);
}